L’analyse statique PHPStan, importée dans le workflow, permet d’identifier les mauvaises pratiques de code dès le début.
SonarQube intègre une couche SAST riche, analysant bugs, duplication et vulnérabilités PHP/Symfony.
Après le build, l’application est déployée en local dans un conteneur Docker pour un scan dynamique via OWASP ZAP, simulant des attaques sur l’application fonctionnelle.

Etapes :
Checkout / Installation : récupération du code et installation des dépendances Symfony.
Analyse statique via PHPStan : détecte les erreurs de logique et code smells avant exécution .
Tests PHPUnit : validation unitaire obligatoire.
Scan SonarQube : enrichissement de l’analyse en profondeur (sécurité, qualité).
Build Docker : encapsulation de l’application pour tests isolés et reproductibles.
Déploiement en staging : conteneur lancé localement pour examen.
Analyse dynamique (DAST) : OWASP ZAP scrute l’application en cours d’exécution avant approbation.
